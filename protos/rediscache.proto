package rediscache;

//以下是服务器的状态管理
message ServiceState {
	required string name        = 1;   //服务的名字
	required bool   open        = 2;   //服务是否开放
}

message ServerNode {
	required string nodename     = 1;  //节点名字
	required string nodeaddr     = 2;  //节点的地址
	required string nodetype     = 3;  //节点的类型
	repeated ServiceState services     = 4;  //提供的服务
	required bool   online       = 5;  //节点是否在线
	required bool   open         = 6;  //节点是否开放
	required int32  lastModTime  = 7;  //上次修改时间
}

message NodeMgr {
	repeated ServerNode nodes    = 1;  //所有的节点状态
}

//-----------------------------------------------------------

//以下是用于lobby的会话状态管理
message SessionNode {
	required string nodename     = 1;  //节点的地址 "lobby1"
	required string service      = 2;  //服务名
	required int32  serviceAddr  = 3;  //服务的数字地址
}

message SessionState {
	required int32  roleId       = 1;  //玩家的角色Id
	required string endpoint     = 2;  //玩家的地址和端口"192.168.0.1:8008"
	required string watchdog     = 3;  //缓存玩家的watchdog地址 "gate1.watchdog"
	optional int32  client       = 4;  //
	optional string agent        = 5;  //玩家的代理地址"game.agent1"
	required int32  lastModTime  = 6;  //上次修改的时间
	repeated SessionNode nodes   = 7;  //所有的无状态服务 
}


//玩家在线状态只由玩家agent修改
message PlayerState {
	required int64  roleId       = 1;  //玩家Id
	optional int32  gameId       = 2;  //游戏Id
	optional int32  roomId       = 3;  //游戏房间Id
	optional int32  deskId       = 4;  //游戏台Id
	optional string agent        = 5;  //玩家的代理地址"game.agent1"
	required int32  clientType   = 6;  //玩家的客户端类型
	required int32  state        = 7;  //玩家在线状态0-不在线 1-在线
}


